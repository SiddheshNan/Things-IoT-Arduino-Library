/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Message { 
    uint32_t msg_type; 
    pb_callback_t msg_id; 
    pb_callback_t resource; 
    pb_callback_t value; 
} Message;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Message_init_default                     {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Message_init_zero                        {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Message_msg_type_tag                     1
#define Message_msg_id_tag                       2
#define Message_resource_tag                     3
#define Message_value_tag                        4

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   msg_type,          1) \
X(a, CALLBACK, OPTIONAL, STRING,   msg_id,            2) \
X(a, CALLBACK, OPTIONAL, STRING,   resource,          3) \
X(a, CALLBACK, OPTIONAL, STRING,   value,             4)
#define Message_CALLBACK pb_default_field_callback
#define Message_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg

/* Maximum encoded size of messages (where known) */
/* Message_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
